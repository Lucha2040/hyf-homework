{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\langl\\\\Desktop\\\\hyf-homework\\\\react\\\\week4\\\\src\\\\GithubList.js\";\nimport React from \"react\"; // import GithubUser from './GithubList';\n\nfunction fetchGithub(query) {\n  const URL = `https://api.github.com/search/users?q=${query}`;\n  return fetch(URL).then(response => response.json());\n}\n\nexport default class GithubList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      isLoading: true,\n      searchUser: \"\",\n      errorMessage: null\n    };\n\n    this.handleSubmit = e => {\n      const searchTerm = e.target.value;\n      console.log(\"Handle submit\", searchTerm);\n      this.setState({\n        searchUser: searchTerm\n      });\n\n      if (searchTerm.length === 0) {\n        this.setState({\n          users: [],\n          isLoading: false\n        });\n        return;\n      }\n\n      fetchGithub(searchTerm).then(data => {\n        console.log(\"fetch data\", data, searchTerm);\n        const users = data.items.map(user => user);\n        console.log(users);\n        this.setState({\n          users: users,\n          isLoading: true,\n          errorMessage: null\n        });\n      }).catch(error => this.setState({\n        errorMessage: \"Fail to fetch\"\n      })).finally(() => this.setState({\n        isLoading: false\n      }));\n    };\n  }\n\n  render() {\n    const {\n      isLoading,\n      users,\n      searchUser,\n      errorMessage\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"searchUser\",\n      value: searchUser,\n      autoComplete: \"off\",\n      onChange: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), !searchUser ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    }, \"No results\") : null, isLoading && !searchUser ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Loading... \") : /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, users.map(user => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n      key: user.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, user.login), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"avatar\",\n      style: {\n        width: '50px'\n      },\n      src: user.avatar_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    })))), errorMessage != null ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, errorMessage) : null);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/langl/Desktop/hyf-homework/react/week4/src/GithubList.js"],"names":["React","fetchGithub","query","URL","fetch","then","response","json","GithubList","Component","state","users","isLoading","searchUser","errorMessage","handleSubmit","e","searchTerm","target","value","console","log","setState","length","data","items","map","user","catch","error","finally","render","id","login","width","avatar_url"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import GithubUser from './GithubList';\r\n\r\n\r\nfunction fetchGithub(query) {\r\n  const URL = `https://api.github.com/search/users?q=${query}`;\r\n  return fetch(URL).then((response) => response.json());\r\n}\r\n\r\nexport default class GithubList extends React.Component {\r\n  state = {\r\n    users: [],\r\n    isLoading: true,\r\n    searchUser: \"\",\r\n    errorMessage: null,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const searchTerm = e.target.value;\r\n    console.log(\"Handle submit\", searchTerm);\r\n    this.setState({\r\n      searchUser: searchTerm,\r\n    });\r\n    if (searchTerm.length === 0) {\r\n      this.setState({\r\n        users: [],\r\n        isLoading: false,\r\n      });\r\n      return;\r\n    }\r\n    fetchGithub(searchTerm)\r\n      .then((data) => {\r\n        console.log(\"fetch data\", data, searchTerm);\r\n        const users = data.items.map((user) => user);\r\n        console.log(users);\r\n        this.setState({\r\n          users: users,\r\n          isLoading: true,\r\n          errorMessage: null,\r\n        });\r\n      })\r\n      .catch((error) => this.setState({ errorMessage: \"Fail to fetch\" }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, users, searchUser, errorMessage } = this.state;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            name=\"searchUser\"\r\n            value={searchUser}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleSubmit}\r\n          />\r\n          <input type=\"submit\" />\r\n        </form>\r\n        {!searchUser ? <h3>No results</h3> : null}\r\n        {isLoading && !searchUser ? (\r\n          <h1>Loading... </h1>\r\n        ) : (\r\n          <ul>\r\n            {users.map((user) => (\r\n                <>\r\n              <li key={user.id}>{user.login}</li>\r\n              <img alt=\"avatar\" style={{width: '50px'}} src={user.avatar_url} />\r\n              </>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {errorMessage != null ? <h1>{errorMessage}</h1> : null}\r\n        {/* <GithubUser /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}